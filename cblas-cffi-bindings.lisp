;;; Generated by Verrazano 0.5
;;; WARNING: This is a generated file, editing it is unwise!


(cl:in-package :cl-user)

(cl:defpackage :cblas-cffi-bindings
  (:use :cffi)
  (:nicknames)
  (:export "CBLAS-DROT"
           "CBLAS-DGEMV"
           "CBLAS-ZSWAP"
           "CBLAS-ZAXPY"
           "CBLAS-DSBMV"
           "CBLAS-CTRMM"
           "CBLAS-CHPR-2"
           "CBLAS-CHERK"
           "CBLAS-CHER-2"
           "CBLAS-CHPMV"
           "CBLAS-IZAMAX"
           "CBLAS-DGER"
           "CBLAS-CHEMV"
           "CBLAS-CHEMM"
           "CBLAS-DSYR-2K"
           "CBLAS-ZGERC"
           "CBLAS-CCOPY"
           "CBLAS-CHPR"
           "CBLAS-CDOTC-SUB"
           "CBLAS-ZGEMV"
           "CBLAS-ZGEMM"
           "CBLAS-ZDSCAL"
           "CBLAS-CHER"
           "CBLAS-ZSYR-2K"
           "CBLAS-DCOPY"
           "CBLAS-DROTM"
           "CBLAS-DSPR-2"
           "CBLAS-CTRSV"
           "CBLAS-CTRSM"
           "CBLAS-DSPMV"
           "CBLAS-DSPR"
           "CBLAS-ZTBSV"
           "CBLAS-DTRSM"
           "CBLAS-SCOPY"
           "CBLAS-SSPR-2"
           "CBLAS-SDSDOT"
           "CBLAS-ZTBMV"
           "CBLAS-DTRMM"
           "CBLAS-SSPMV"
           "CBLAS-ZDOTU-SUB"
           "CBLAS-DGBMV"
           "CBLAS-DSWAP"
           "CBLAS-SSYR"
           "CBLAS-ZSYMM"
           "CBLAS-CAXPY"
           "CBLAS-SCNRM-2"
           "CBLAS-STRSV"
           "CBLAS-STRSM"
           "CBLAS-SSPR"
           "CBLAS-CSYR-2K"
           "CBLAS-STRMV"
           "CBLAS-STRMM"
           "CBLAS-CGERU"
           "CBLAS-CGERC"
           "CBLAS-SGBMV"
           "CBLAS-CDOTU-SUB"
           "CBLAS-ZSCAL"
           "CBLAS-SAXPY"
           "CBLAS-DAXPY"
           "CBLAS-CGEMV"
           "CBLAS-CGEMM"
           "CBLAS-ZTPSV"
           "CBLAS-SSWAP"
           "CBLAS-CSSCAL"
           "CBLAS-DNRM-2"
           "CBLAS-DTRMV"
           "CBLAS-IDAMAX"
           "CBLAS-ZTPMV"
           "CBLAS-DZNRM-2"
           "CBLAS-ZHER-2K"
           "CBLAS-SDOT"
           "CBLAS-CTBSV"
           "CBLAS-DROTG"
           "CBLAS-DGEMM"
           "CBLAS-CGBMV"
           "CBLAS-SROTMG"
           "CBLAS-SNRM-2"
           "CBLAS-ISAMAX"
           "CBLAS-ZHBMV"
           "CBLAS-SGEMV"
           "CBLAS-SGEMM"
           "CBLAS-CTBMV"
           "CBLAS-ZGERU"
           "CBLAS-CSYRK"
           "CBLAS-SROT"
           "CBLAS-DTBSV"
           "CBLAS-CSYMM"
           "CBLAS-DSDOT"
           "CBLAS-DTBMV"
           "CBLAS-SCASUM"
           "CBLAS-CSWAP"
           "CBLAS-DSYR"
           "CBLAS-SGER"
           "CBLAS-DSYRK"
           "CBLAS-CHER-2K"
           "CBLAS-DSYR-2"
           "CBLAS-ZHPR-2"
           "CBLAS-ZHERK"
           "CBLAS-DSYMV"
           "CBLAS-DSYMM"
           "CBLAS-ZHER-2"
           "CBLAS-ZHPMV"
           "CBLAS-CSCAL"
           "CBLAS-CTPSV"
           "CBLAS-SSBMV"
           "CBLAS-ICAMAX"
           "SIZE-T"
           "CBLAS-STBSV"
           "CBLAS-ZHEMV"
           "CBLAS-ZHEMM"
           "CBLAS-DTPSV"
           "CBLAS-STBMV"
           "CBLAS-ZCOPY"
           "CBLAS-DSCAL"
           "CBLAS-SSYRK"
           "CBLAS-DZASUM"
           "CBLAS-SSYR-2"
           "CBLAS-SSYR-2K"
           "CBLAS-SSYMV"
           "CBLAS-SSYMM"
           "CBLAS-CTRMV"
           "CBLAS-DTPMV"
           "CBLAS-DDOT"
           "CBLAS-SASUM"
           "CBLAS-ZSYRK"
           "CBLAS-ZTRSV"
           "CBLAS-ZHPR"
           "CBLAS-CHBMV"
           "CBLAS-CTPMV"
           "CBLAS-ZTRSM"
           "CBLAS-SROTM"
           "CBLAS-SROTG"
           "CBLAS-DTRSV"
           "CBLAS-ZTRMV"
           "CBLAS-ZTRMM"
           "CBLAS-RIGHT"
           "CBLAS-LEFT"
           "CBLAS-SIDE"
           "CBLAS-SSCAL"
           "CBLAS-STPSV"
           "CBLAS-ZGBMV"
           "CBLAS-ZHER"
           "CBLAS-STPMV"
           "CBLAS-UNIT"
           "CBLAS-NON-UNIT"
           "CBLAS-DIAG"
           "CBLAS-CONJ-TRANS"
           "CBLAS-TRANS"
           "CBLAS-NO-TRANS"
           "CBLAS-TRANSPOSE"
           "CBLAS-LOWER"
           "CBLAS-UPPER"
           "CBLAS-UPLO"
           "CBLAS-COL-MAJOR"
           "CBLAS-ROW-MAJOR"
           "CBLAS-ORDER"
           "CBLAS-XERBLA"
           "CBLAS-DASUM"
           "CBLAS-ZDOTC-SUB"
           "CBLAS-DROTMG"))

(cl:in-package :cblas-cffi-bindings)

(cl:defun vtable-lookup (pobj indx coff)
  (cl:let ((vptr (cffi:mem-ref pobj :pointer coff)))
    (cffi:mem-aref vptr :pointer (cl:- indx 2))))

(cl:defmacro virtual-funcall (pobj indx coff cl:&body body)
  `(cffi:foreign-funcall-pointer (vtable-lookup ,pobj ,indx ,coff) ,cl:nil
                                 ,@body))

(cffi:defcfun ("cblas_drotmg" cblas-drotmg) :void (d-1 (:pointer :double))
  (d-2 (:pointer :double))
  (b-1 (:pointer :double))
  (b-2 :double)
  (p (:pointer :double)))

(cffi:defcfun ("cblas_zdotc_sub" cblas-zdotc-sub) :void (n :int) (x :pointer)
  (inc-x :int)
  (y :pointer)
  (inc-y :int)
  (dotc (:pointer :void)))

(cffi:defcfun ("cblas_dasum" cblas-dasum) :double (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_xerbla" cblas-xerbla) :void (p :int) (rout :pointer)
  (form :pointer)common-lisp:&rest)

(cffi:defcenum cblas-order
  (:cblas-row-major 101)
  (:cblas-col-major 102))

(cffi:defcenum cblas-uplo
  (:cblas-upper 121)
  (:cblas-lower 122))

(cffi:defcenum cblas-transpose
  (:cblas-no-trans 111)
  (:cblas-trans 112)
  (:cblas-conj-trans 113))

(cffi:defcenum cblas-diag
  (:cblas-non-unit 131)
  (:cblas-unit 132))

(cffi:defcfun ("cblas_stpmv" cblas-stpmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :float))
  (inc-x :int))

(cffi:defcfun ("cblas_zher" cblas-zher) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (x :pointer)
  (inc-x :int) (a (:pointer :void))
  (lda :int))

(cffi:defcfun ("cblas_zgbmv" cblas-zgbmv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int) (kl :int)
  (ku :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_stpsv" cblas-stpsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :float))
  (inc-x :int))

(cffi:defcfun ("cblas_sscal" cblas-sscal) :void (n :int) (alpha :float)
  (x (:pointer :float))
  (inc-x :int))

(cffi:defcenum cblas-side
  (:cblas-left 141)
  (:cblas-right 142))

(cffi:defcfun ("cblas_ztrmm" cblas-ztrmm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b (:pointer :void)) (ldb :int))

(cffi:defcfun ("cblas_ztrmv" cblas-ztrmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_dtrsv" cblas-dtrsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_srotg" cblas-srotg) :void (a (:pointer :float))
  (b (:pointer :float))
  (c (:pointer :float))
  (s (:pointer :float)))

(cffi:defcfun ("cblas_srotm" cblas-srotm) :void (n :int) (x (:pointer :float))
  (inc-x :int)
  (y (:pointer :float))
  (inc-y :int) (p :pointer))

(cffi:defcfun ("cblas_ztrsm" cblas-ztrsm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b (:pointer :void)) (ldb :int))

(cffi:defcfun ("cblas_ctpmv" cblas-ctpmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_chbmv" cblas-chbmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (k :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_zhpr" cblas-zhpr) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (x :pointer)
  (inc-x :int) (a (:pointer :void)))

(cffi:defcfun ("cblas_ztrsv" cblas-ztrsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_zsyrk" cblas-zsyrk) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose) (n :int)
  (k :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_sasum" cblas-sasum) :float (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_ddot" cblas-ddot) :double (n :int) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int))

(cffi:defcfun ("cblas_dtpmv" cblas-dtpmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_ctrmv" cblas-ctrmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_ssymm" cblas-ssymm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo) (m :int)
  (n :int) (alpha :float)
  (a :pointer) (lda :int)
  (b :pointer) (ldb :int)
  (beta :float)
  (c (:pointer :float)) (ldc :int))

(cffi:defcfun ("cblas_ssymv" cblas-ssymv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :float)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_ssyr2k" cblas-ssyr-2k) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose)
  (n :int) (k :int)
  (alpha :float) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :float)
  (c (:pointer :float))
  (ldc :int))

(cffi:defcfun ("cblas_ssyr2" cblas-ssyr-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (a (:pointer :float))
  (lda :int))

(cffi:defcfun ("cblas_dzasum" cblas-dzasum) :double (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_ssyrk" cblas-ssyrk) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose) (n :int)
  (k :int) (alpha :float)
  (a :pointer) (lda :int)
  (beta :float)
  (c (:pointer :float)) (ldc :int))

(cffi:defcfun ("cblas_dscal" cblas-dscal) :void (n :int) (alpha :double)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_zcopy" cblas-zcopy) :void (n :int) (x :pointer)
  (inc-x :int)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_stbmv" cblas-stbmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :float))
  (inc-x :int))

(cffi:defcfun ("cblas_dtpsv" cblas-dtpsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_zhemm" cblas-zhemm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b :pointer) (ldb :int)
  (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_zhemv" cblas-zhemv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_stbsv" cblas-stbsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :float))
  (inc-x :int))

(cffi::defctype size-t :unsigned-long)

(cffi:defcfun ("cblas_icamax" cblas-icamax) size-t (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_ssbmv" cblas-ssbmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (k :int) (alpha :float)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :float)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_ctpsv" cblas-ctpsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_cscal" cblas-cscal) :void (n :int) (alpha :pointer)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_zhpmv" cblas-zhpmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (ap :pointer)
  (x :pointer) (inc-x :int)
  (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_zher2" cblas-zher-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (a (:pointer :void)) (lda :int))

(cffi:defcfun ("cblas_dsymm" cblas-dsymm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo) (m :int)
  (n :int) (alpha :double)
  (a :pointer) (lda :int)
  (b :pointer) (ldb :int)
  (beta :double)
  (c (:pointer :double))
  (ldc :int))

(cffi:defcfun ("cblas_dsymv" cblas-dsymv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :double)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_zherk" cblas-zherk) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose) (n :int)
  (k :int) (alpha :double)
  (a :pointer) (lda :int)
  (beta :double)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_zhpr2" cblas-zhpr-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (ap (:pointer :void)))

(cffi:defcfun ("cblas_dsyr2" cblas-dsyr-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (a (:pointer :double))
  (lda :int))

(cffi:defcfun ("cblas_cher2k" cblas-cher-2k) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose)
  (n :int) (k :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :float)
  (c (:pointer :void))
  (ldc :int))

(cffi:defcfun ("cblas_dsyrk" cblas-dsyrk) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose) (n :int)
  (k :int) (alpha :double)
  (a :pointer) (lda :int)
  (beta :double)
  (c (:pointer :double))
  (ldc :int))

(cffi:defcfun ("cblas_sger" cblas-sger) :void (order cblas-order) (m :int)
  (n :int) (alpha :float)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int)
  (a (:pointer :float)) (lda :int))

(cffi:defcfun ("cblas_dsyr" cblas-dsyr) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (x :pointer)
  (inc-x :int)
  (a (:pointer :double)) (lda :int))

(cffi:defcfun ("cblas_cswap" cblas-cswap) :void (n :int) (x (:pointer :void))
  (inc-x :int)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_scasum" cblas-scasum) :float (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_dtbmv" cblas-dtbmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_dsdot" cblas-dsdot) :double (n :int) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int))

(cffi:defcfun ("cblas_csymm" cblas-csymm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b :pointer) (ldb :int)
  (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_dtbsv" cblas-dtbsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_srot" cblas-srot) :void (n :int) (x (:pointer :float))
  (inc-x :int) (y (:pointer :float))
  (inc-y :int) (c :float) (s :float))

(cffi:defcfun ("cblas_csyrk" cblas-csyrk) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose) (n :int)
  (k :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_zgeru" cblas-zgeru) :void (order cblas-order) (m :int)
  (n :int) (alpha :pointer)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int)
  (a (:pointer :void)) (lda :int))

(cffi:defcfun ("cblas_ctbmv" cblas-ctbmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_sgemm" cblas-sgemm) :void (order cblas-order)
  (trans-a cblas-transpose)
  (trans-b cblas-transpose)
  (m :int) (n :int) (k :int)
  (alpha :float) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :float)
  (c (:pointer :float)) (ldc :int))

(cffi:defcfun ("cblas_sgemv" cblas-sgemv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int) (alpha :float)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :float)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_zhbmv" cblas-zhbmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (k :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_isamax" cblas-isamax) size-t (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_snrm2" cblas-snrm-2) :float (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_srotmg" cblas-srotmg) :void (d-1 (:pointer :float))
  (d-2 (:pointer :float))
  (b-1 (:pointer :float))
  (b-2 :float)
  (p (:pointer :float)))

(cffi:defcfun ("cblas_cgbmv" cblas-cgbmv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int) (kl :int)
  (ku :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_dgemm" cblas-dgemm) :void (order cblas-order)
  (trans-a cblas-transpose)
  (trans-b cblas-transpose)
  (m :int) (n :int) (k :int)
  (alpha :double) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :double)
  (c (:pointer :double))
  (ldc :int))

(cffi:defcfun ("cblas_drotg" cblas-drotg) :void (a (:pointer :double))
  (b (:pointer :double))
  (c (:pointer :double))
  (s (:pointer :double)))

(cffi:defcfun ("cblas_ctbsv" cblas-ctbsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_sdot" cblas-sdot) :float (n :int) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int))

(cffi:defcfun ("cblas_zher2k" cblas-zher-2k) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose)
  (n :int) (k :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :double)
  (c (:pointer :void))
  (ldc :int))

(cffi:defcfun ("cblas_dznrm2" cblas-dznrm-2) :double (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_ztpmv" cblas-ztpmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_idamax" cblas-idamax) size-t (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_dtrmv" cblas-dtrmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :double))
  (inc-x :int))

(cffi:defcfun ("cblas_dnrm2" cblas-dnrm-2) :double (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_csscal" cblas-csscal) :void (n :int) (alpha :float)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_sswap" cblas-sswap) :void (n :int) (x (:pointer :float))
  (inc-x :int)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_ztpsv" cblas-ztpsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (ap :pointer)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_cgemm" cblas-cgemm) :void (order cblas-order)
  (trans-a cblas-transpose)
  (trans-b cblas-transpose)
  (m :int) (n :int) (k :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_cgemv" cblas-cgemv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_daxpy" cblas-daxpy) :void (n :int) (alpha :double)
  (x :pointer) (inc-x :int)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_saxpy" cblas-saxpy) :void (n :int) (alpha :float)
  (x :pointer) (inc-x :int)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_zscal" cblas-zscal) :void (n :int) (alpha :pointer)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_cdotu_sub" cblas-cdotu-sub) :void (n :int) (x :pointer)
  (inc-x :int)
  (y :pointer)
  (inc-y :int)
  (dotu (:pointer :void)))

(cffi:defcfun ("cblas_sgbmv" cblas-sgbmv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int) (kl :int)
  (ku :int) (alpha :float)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :float)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_cgerc" cblas-cgerc) :void (order cblas-order) (m :int)
  (n :int) (alpha :pointer)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int)
  (a (:pointer :void)) (lda :int))

(cffi:defcfun ("cblas_cgeru" cblas-cgeru) :void (order cblas-order) (m :int)
  (n :int) (alpha :pointer)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int)
  (a (:pointer :void)) (lda :int))

(cffi:defcfun ("cblas_strmm" cblas-strmm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :float)
  (a :pointer) (lda :int)
  (b (:pointer :float)) (ldb :int))

(cffi:defcfun ("cblas_strmv" cblas-strmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :float))
  (inc-x :int))

(cffi:defcfun ("cblas_csyr2k" cblas-csyr-2k) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose)
  (n :int) (k :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :pointer)
  (c (:pointer :void))
  (ldc :int))

(cffi:defcfun ("cblas_sspr" cblas-sspr) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (x :pointer)
  (inc-x :int)
  (ap (:pointer :float)))

(cffi:defcfun ("cblas_strsm" cblas-strsm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :float)
  (a :pointer) (lda :int)
  (b (:pointer :float)) (ldb :int))

(cffi:defcfun ("cblas_strsv" cblas-strsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :float))
  (inc-x :int))

(cffi:defcfun ("cblas_scnrm2" cblas-scnrm-2) :float (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_caxpy" cblas-caxpy) :void (n :int) (alpha :pointer)
  (x :pointer) (inc-x :int)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_zsymm" cblas-zsymm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b :pointer) (ldb :int)
  (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_ssyr" cblas-ssyr) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (x :pointer)
  (inc-x :int) (a (:pointer :float))
  (lda :int))

(cffi:defcfun ("cblas_dswap" cblas-dswap) :void (n :int) (x (:pointer :double))
  (inc-x :int)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_dgbmv" cblas-dgbmv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int) (kl :int)
  (ku :int) (alpha :double)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :double)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_zdotu_sub" cblas-zdotu-sub) :void (n :int) (x :pointer)
  (inc-x :int)
  (y :pointer)
  (inc-y :int)
  (dotu (:pointer :void)))

(cffi:defcfun ("cblas_sspmv" cblas-sspmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (ap :pointer)
  (x :pointer) (inc-x :int)
  (beta :float)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_dtrmm" cblas-dtrmm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :double)
  (a :pointer) (lda :int)
  (b (:pointer :double))
  (ldb :int))

(cffi:defcfun ("cblas_ztbmv" cblas-ztbmv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_sdsdot" cblas-sdsdot) :float (n :int) (alpha :float)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int))

(cffi:defcfun ("cblas_sspr2" cblas-sspr-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (a (:pointer :float)))

(cffi:defcfun ("cblas_scopy" cblas-scopy) :void (n :int) (x :pointer)
  (inc-x :int)
  (y (:pointer :float))
  (inc-y :int))

(cffi:defcfun ("cblas_dtrsm" cblas-dtrsm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :double)
  (a :pointer) (lda :int)
  (b (:pointer :double))
  (ldb :int))

(cffi:defcfun ("cblas_ztbsv" cblas-ztbsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (k :int) (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_dspr" cblas-dspr) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (x :pointer)
  (inc-x :int)
  (ap (:pointer :double)))

(cffi:defcfun ("cblas_dspmv" cblas-dspmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (ap :pointer)
  (x :pointer) (inc-x :int)
  (beta :double)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_ctrsm" cblas-ctrsm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b (:pointer :void)) (ldb :int))

(cffi:defcfun ("cblas_ctrsv" cblas-ctrsv) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (n :int)
  (a :pointer) (lda :int)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_dspr2" cblas-dspr-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :double) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (a (:pointer :double)))

(cffi:defcfun ("cblas_drotm" cblas-drotm) :void (n :int) (x (:pointer :double))
  (inc-x :int)
  (y (:pointer :double))
  (inc-y :int) (p :pointer))

(cffi:defcfun ("cblas_dcopy" cblas-dcopy) :void (n :int) (x :pointer)
  (inc-x :int)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_zsyr2k" cblas-zsyr-2k) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose)
  (n :int) (k :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :pointer)
  (c (:pointer :void))
  (ldc :int))

(cffi:defcfun ("cblas_cher" cblas-cher) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (x :pointer)
  (inc-x :int) (a (:pointer :void))
  (lda :int))

(cffi:defcfun ("cblas_zdscal" cblas-zdscal) :void (n :int) (alpha :double)
  (x (:pointer :void))
  (inc-x :int))

(cffi:defcfun ("cblas_zgemm" cblas-zgemm) :void (order cblas-order)
  (trans-a cblas-transpose)
  (trans-b cblas-transpose)
  (m :int) (n :int) (k :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_zgemv" cblas-zgemv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_cdotc_sub" cblas-cdotc-sub) :void (n :int) (x :pointer)
  (inc-x :int)
  (y :pointer)
  (inc-y :int)
  (dotc (:pointer :void)))

(cffi:defcfun ("cblas_chpr" cblas-chpr) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :float) (x :pointer)
  (inc-x :int) (a (:pointer :void)))

(cffi:defcfun ("cblas_ccopy" cblas-ccopy) :void (n :int) (x :pointer)
  (inc-x :int)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_zgerc" cblas-zgerc) :void (order cblas-order) (m :int)
  (n :int) (alpha :pointer)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int)
  (a (:pointer :void)) (lda :int))

(cffi:defcfun ("cblas_dsyr2k" cblas-dsyr-2k) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose)
  (n :int) (k :int)
  (alpha :double) (a :pointer)
  (lda :int) (b :pointer)
  (ldb :int) (beta :double)
  (c (:pointer :double))
  (ldc :int))

(cffi:defcfun ("cblas_chemm" cblas-chemm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b :pointer) (ldb :int)
  (beta :pointer)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_chemv" cblas-chemv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_dger" cblas-dger) :void (order cblas-order) (m :int)
  (n :int) (alpha :double)
  (x :pointer) (inc-x :int)
  (y :pointer) (inc-y :int)
  (a (:pointer :double)) (lda :int))

(cffi:defcfun ("cblas_izamax" cblas-izamax) size-t (n :int) (x :pointer)
  (inc-x :int))

(cffi:defcfun ("cblas_chpmv" cblas-chpmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (ap :pointer)
  (x :pointer) (inc-x :int)
  (beta :pointer)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_cher2" cblas-cher-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (a (:pointer :void)) (lda :int))

(cffi:defcfun ("cblas_cherk" cblas-cherk) :void (order cblas-order)
  (uplo cblas-uplo)
  (trans cblas-transpose) (n :int)
  (k :int) (alpha :float)
  (a :pointer) (lda :int)
  (beta :float)
  (c (:pointer :void)) (ldc :int))

(cffi:defcfun ("cblas_chpr2" cblas-chpr-2) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (alpha :pointer) (x :pointer)
  (inc-x :int) (y :pointer)
  (inc-y :int)
  (ap (:pointer :void)))

(cffi:defcfun ("cblas_ctrmm" cblas-ctrmm) :void (order cblas-order)
  (side cblas-side)
  (uplo cblas-uplo)
  (trans-a cblas-transpose)
  (diag cblas-diag) (m :int)
  (n :int) (alpha :pointer)
  (a :pointer) (lda :int)
  (b (:pointer :void)) (ldb :int))

(cffi:defcfun ("cblas_dsbmv" cblas-dsbmv) :void (order cblas-order)
  (uplo cblas-uplo) (n :int)
  (k :int) (alpha :double)
  (a :pointer) (lda :int)
  (x :pointer) (inc-x :int)
  (beta :double)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_zaxpy" cblas-zaxpy) :void (n :int) (alpha :pointer)
  (x :pointer) (inc-x :int)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_zswap" cblas-zswap) :void (n :int) (x (:pointer :void))
  (inc-x :int)
  (y (:pointer :void))
  (inc-y :int))

(cffi:defcfun ("cblas_dgemv" cblas-dgemv) :void (order cblas-order)
  (trans-a cblas-transpose)
  (m :int) (n :int)
  (alpha :double) (a :pointer)
  (lda :int) (x :pointer)
  (inc-x :int) (beta :double)
  (y (:pointer :double))
  (inc-y :int))

(cffi:defcfun ("cblas_drot" cblas-drot) :void (n :int) (x (:pointer :double))
  (inc-x :int)
  (y (:pointer :double))
  (inc-y :int) (c :double)
  (s :double))
